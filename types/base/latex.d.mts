export const symbols_map: {
    '#alpha': string;
    '#beta': string;
    '#chi': string;
    '#delta': string;
    '#digamma': string;
    '#varepsilon': string;
    '#phi': string;
    '#gamma': string;
    '#eta': string;
    '#iota': string;
    '#varphi': string;
    '#kappa': string;
    '#koppa': string;
    '#sampi': string;
    '#lambda': string;
    '#mu': string;
    '#nu': string;
    '#omicron': string;
    '#pi': string;
    '#theta': string;
    '#rho': string;
    '#sigma': string;
    '#stigma': string;
    '#san': string;
    '#sho': string;
    '#tau': string;
    '#upsilon': string;
    '#varomega': string;
    '#varcoppa': string;
    '#omega': string;
    '#xi': string;
    '#psi': string;
    '#zeta': string;
    '#Alpha': string;
    '#Beta': string;
    '#Chi': string;
    '#Delta': string;
    '#Digamma': string;
    '#Epsilon': string;
    '#Phi': string;
    '#Gamma': string;
    '#Eta': string;
    '#Iota': string;
    '#vartheta': string;
    '#Kappa': string;
    '#Koppa': string;
    '#varKoppa': string;
    '#Sampi': string;
    '#Lambda': string;
    '#Mu': string;
    '#Nu': string;
    '#Omicron': string;
    '#Pi': string;
    '#Theta': string;
    '#Rho': string;
    '#Sigma': string;
    '#Stigma': string;
    '#San': string;
    '#Sho': string;
    '#Tau': string;
    '#Upsilon': string;
    '#varsigma': string;
    '#Omega': string;
    '#Xi': string;
    '#Psi': string;
    '#Zeta': string;
    '#varUpsilon': string;
    '#epsilon': string;
    '#P': string;
    '#sqrt': string;
    '#bar': string;
    '#overline': string;
    '#underline': string;
    '#strike': string;
    '#leq': string;
    '#/': string;
    '#infty': string;
    '#voidb': string;
    '#club': string;
    '#diamond': string;
    '#heart': string;
    '#spade': string;
    '#leftrightarrow': string;
    '#leftarrow': string;
    '#uparrow': string;
    '#rightarrow': string;
    '#downarrow': string;
    '#circ': string;
    '#pm': string;
    '#doublequote': string;
    '#geq': string;
    '#times': string;
    '#propto': string;
    '#partial': string;
    '#bullet': string;
    '#divide': string;
    '#neq': string;
    '#equiv': string;
    '#approx': string;
    '#3dots': string;
    '#cbar': string;
    '#topbar': string;
    '#downleftarrow': string;
    '#aleph': string;
    '#Jgothic': string;
    '#Rgothic': string;
    '#voidn': string;
    '#otimes': string;
    '#oplus': string;
    '#oslash': string;
    '#cap': string;
    '#cup': string;
    '#supseteq': string;
    '#supset': string;
    '#notsubset': string;
    '#subseteq': string;
    '#subset': string;
    '#int': string;
    '#in': string;
    '#notin': string;
    '#angle': string;
    '#nabla': string;
    '#oright': string;
    '#ocopyright': string;
    '#trademark': string;
    '#prod': string;
    '#surd': string;
    '#upoint': string;
    '#corner': string;
    '#wedge': string;
    '#vee': string;
    '#Leftrightarrow': string;
    '#Leftarrow': string;
    '#Uparrow': string;
    '#Rightarrow': string;
    '#Downarrow': string;
    '#LT': string;
    '#void1': string;
    '#copyright': string;
    '#void3': string;
    '#sum': string;
    '#arctop': string;
    '#lbar': string;
    '#arcbottom': string;
    '#void8': string;
    '#bottombar': string;
    '#arcbar': string;
    '#ltbar': string;
    '#AA': string;
    '#aa': string;
    '#void06': string;
    '#GT': string;
    '#forall': string;
    '#exists': string;
    '#vec': string;
    '#dot': string;
    '#hat': string;
    '#ddot': string;
    '#acute': string;
    '#grave': string;
    '#check': string;
    '#tilde': string;
    '#slash': string;
    '#hbar': string;
    '#box': string;
    '#Box': string;
    '#parallel': string;
    '#perp': string;
    '#odot': string;
    '#left': string;
    '#right': string;
    '{}': string;
};
/** @summary Simple replacement of latex letters
  * @private */
export function translateLaTeX(str: any, more: any): any;
/** @summary Just add plain text to the SVG text elements
  * @private */
export function producePlainText(painter: any, txt_node: any, arg: any): void;
/** @summary Check if plain text
  * @private */
export function isPlainText(txt: any): boolean;
/** @ummary translate TLatex and draw inside provided g element
  * @desc use <text> together with normal <path> elements
  * @private */
export function produceLatex(painter: any, node: any, arg: any): boolean;
/** @summary Load MathJax functionality,
  * @desc one need not only to load script but wait for initialization
  * @private */
export function loadMathjax(): Promise<any>;
/** @summary Produce text with MathJax
  * @private */
export function produceMathjax(painter: any, mj_node: any, arg: any): Promise<boolean>;
/** @summary Just typeset HTML node with MathJax
  * @private */
export function typesetMathjax(node: any): Promise<any>;
